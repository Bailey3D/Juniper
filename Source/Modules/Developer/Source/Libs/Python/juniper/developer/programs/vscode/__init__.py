"""
Library containing various helper functions for VSCode
"""
import json
import os

import juniper.engine.paths
import juniper.engine.types.plugin
import juniper.engine.types.module


def code_workspace_path():
    """
    :return <str:path> The path to the `Juniper.code-workspace` file
    """
    return os.path.join(juniper.engine.paths.root(), ".vscode\\Juniper.code-workspace")


def code_workspace_template_path():
    """
    :return <str:path> The path to the `code_workspace_template.json` config file
    """
    return os.path.join(juniper.engine.paths.root(), "Source\\Modules\\Developer\\Config\\code_workspace_template.json")


def generate_code_workspace():
    """
    Generates the `Juniper.code-workspace` file in the `.vscode` folder in juniper's workspace root
    """
    with open(code_workspace_template_path(), "r") as f:
        json_data = json.load(f)

    # Base juniper workspace
    json_data["folders"].append({
        "name": "Juniper",
        "path": juniper.engine.paths.root()
    })

    for plugin in juniper.engine.types.plugin.PluginManager():
        plugin_name = f"Plugin - {plugin.display_name}"
        if(plugin.internal):
            plugin_name += " (Internal)"

        json_data["folders"].append({
            "name": plugin_name,
            "path": plugin.root
        })

    # Overriden python workspace settings
    json_data["settings"]["python.defaultInterpreterPath"] = "${workspaceFolder:Juniper}\\Binaries\\Python\\Python37\\python.exe"

    json_data["settings"]["python.analysis.extraPaths"].append(os.path.join(juniper.engine.paths.root(), "Source\\Libs\\Python"))
    json_data["settings"]["python.analysis.extraPaths"].append(
        os.path.join(juniper.engine.paths.root(), "Cached\\PyCache\\Python37\\site-packages")
    )

    for plugin in juniper.engine.types.plugin.PluginManager():
        json_data["settings"]["python.analysis.extraPaths"].append(os.path.join(plugin.root, "Source\\Libs\\Python"))

    for module in juniper.engine.types.module.ModuleManager():
        json_data["settings"]["python.analysis.extraPaths"].append(os.path.join(module.root, "Source\\Libs\\Python"))

    if(not os.path.isdir(os.path.dirname(code_workspace_path()))):
        os.makedirs(os.path.dirname(code_workspace_path()))

    with open(code_workspace_path(), "w") as f:
        f.write("// WARNING: THIS FILE IS AUTOGENERATED - ANY EDITS WILL BE OVERRIDEN\n")
        f.write("// Any per-user settings should be added to your local user workspace\n")
        f.write("// Any juniper global settings should be added to `//source/modules/developer/config/code_workspace_template.json`\n")
        f.writelines(json.dumps(json_data, indent=4, sort_keys=True))


generate_code_workspace()
