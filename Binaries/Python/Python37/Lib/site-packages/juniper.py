"""
:script
:type startup
:desc This script is responsible for hooking the "real" juniper library to the standalone python interpreter
:desc This same script can be used to hook an external Python install to the Juniper workspace
:desc and makes it as simple as running `import juniper` to run the juniper startup process.
"""
import json
import os
import sys

sys.modules["__juniper_hook"] = sys.modules.pop("juniper")
os.environ["PYTHONVERBOSE"] = "1"


def path():
    """Returns the stored tools library root path as stored in the registry"""
    juniper_config = os.path.join(os.getenv("APPDATA"), "juniper\\config.json")
    with open(juniper_config, "r") as f:
        return json.load(f)["path"]


def run_file_(file_path):
    path_ = file_path
    globals_ = globals()
    globals_["__file__"] = path_
    globals_["__package__"] = os.path.dirname(file_path)
    globals_["__program_context__"] = "python"
    exec(open(path_).read(), globals_)


run_file_(path() + "\\Source\\Startup\\__startup__.py")
